*** /home/tirasz/newLogic/transpy/tests/transformed-test_files/test_4.py
--- /home/tirasz/newLogic/transpy/tests/transformed-test_files/test_4.py
***************
*** 1,23 ****
  
  # Comment before If (Literal)
! if asd == 2: # Comment on If-s line (Literal)
!     # Comment inside If (Literal)
!     print(asd)
! # Comment before If (OR pattern)
! elif asd == 4 or asd == 5 or asd == 6: # Comment on If-s line (OR pattern)
!     print(asd)
!     # Comment inside If (OR pattern)
! # Comment before If (ClassPattern)
! elif isinstance(asd, SomeClass) and ((asd.prop1 == 3 or asd.prop1 is None) and asd.prop2 == 2):
!     # Comment inside If (ClassPattern)
!     print(asd)
! # Comment before If (SingletonPattern)
! elif asd is None: # Comment on If-s line (SingletonPattern)
!     print(asd)
! # Comment before If (GuardPattern)
! elif isinstance(asd, SomeClass) and some_function():
!     # Comment inside If (GuardPattern)
!     print(asd)
      # Comment end If (GuardPattern)
      # Comment end If (GuardPattern)
      # Comment end If (GuardPattern)
--- 1,28 ----
  
  # Comment before If (Literal)
! # PRESERVED COMMENTS: 
!  # Comment before If (Literal)
!  # Comment on If-s line (Literal)
!  # Comment inside If (Literal)
!  # Comment before If (OR pattern)
!  # Comment on If-s line (OR pattern)
!  # Comment inside If (OR pattern)
!  # Comment before If (ClassPattern)
!  # Comment inside If (ClassPattern)
!  # Comment before If (SingletonPattern)
!  # Comment on If-s line (SingletonPattern)
!  # Comment before If (GuardPattern)
! match asd:
!     case 2:
!         print(asd)
!     case 4 | 5 | 6:
!         print(asd)
!     case SomeClass(prop1=3 | None, prop2=2):
!         print(asd)
!     case None:
!         print(asd)
!     case SomeClass() if some_function():
!         print(asd)
      # Comment end If (GuardPattern)
      # Comment end If (GuardPattern)
      # Comment end If (GuardPattern)
***************
*** 30,56 ****
      number one
  """
  
! if isinstance(obj, Cat):
!     # Its a black or gray cat (scary)
!     if obj.color == 'black' or obj.color == 'gray':
!         turn_around() # Just gtfo
!     # Its a fat orange cat
!     # So it has to be garfield right?
!     elif obj.color == 'orange' and obj.weight == 'a lot':
!         give_lasagne() # Its garfield! (cute)
!     else: # Boring cat, dont care + l + ratio
          ignore_cat()
! elif isinstance(obj, Dog):
!     """
!     Multiline comment
!     number three
!     inside if
!     """
!     if obj.color == 'black' or obj.color == 'gray':
          give_pets()
!     elif obj.color == 'orange' and obj.weight == 'a lot':
          give_treats()
!     else:
          ignore_cat()
  
  """Multiline comment
--- 35,59 ----
      number one
  """
  
! # PRESERVED COMMENTS: 
!  # Its a black or gray cat (scary)
!  # Just gtfo
!  # Its a fat orange cat
!  # So it has to be garfield right?
!  # Its garfield! (cute)
!  # Boring cat, dont care + l + ratio
! match obj:
!     case Cat(color='black' | 'gray'):
!         turn_around()
!     case Cat(color='orange', weight='a lot'):
!         give_lasagne()
!     case Cat():
          ignore_cat()
!     case Dog(color='black' | 'gray'):
          give_pets()
!     case Dog(color='orange', weight='a lot'):
          give_treats()
!     case Dog():
          ignore_cat()
  
  """Multiline comment
***************
*** 58,78 ****
  """
  
  
! if number == None:
!     """
!     Multiline comment 
!     """
!     some_function(number)
! elif number == 2 or number == 3 or number == 3:
!     some_function(number)
! elif (number == 4 or number == 5 or number == 6) and anything(1) and anything("Something"): 
!     """
!     Multiline comment 
!     """
!     some_function(number)
! elif anything(2) and anything() and number == 7:
!     """asdasdasd"""
!     some_function(number)
! elif asd == 8 and (number == 9 or number == 10):
!     some_function(asd)
  
--- 61,75 ----
  """
  
  
! match number:
!     case None:
!         some_function(number)
!     case 2 | 3 | 3:
!         some_function(number)
!     case 4 | 5 | 6 if anything(1) and anything('Something'):
!         some_function(number)
!     case 7 if anything(2) and anything():
!         some_function(number)
!     case 9 | 10 if asd == 8:
!         some_function(asd)
  
*** /home/tirasz/newLogic/transpy/tests/transformed-test_files/test_2.py
--- /home/tirasz/newLogic/transpy/tests/transformed-test_files/test_2.py
***************
*** 1,11 ****
! if isinstance(obj, Class):
!     pass
  
! if (isinstance(obj, Class) and (obj.prop == 2 or obj.prop == 4)) or obj == 2:
!     pass
  
! if isinstance(obj, Class) and (obj.prop == 2 or obj.prop == 3) and (obj.prop2 == 5 or obj.prop2 == -5):
!     pass
  
  if obj.prop == 2 or obj.prop == 4:
      something()
--- 1,14 ----
! match obj:
!     case Class():
!         pass
  
! match obj:
!     case Class(prop=2 | 4) | 2:
!         pass
  
! match obj:
!     case Class(prop=2 | 3, prop2=5 | -5):
!         pass
  
  if obj.prop == 2 or obj.prop == 4:
      something()
***************
*** 13,57 ****
      something()
  
  
! if isinstance(obj, Class) and (obj.attr == 2 or obj.attr == 3) and (isinstance(obj.pos, OtherClass) and (obj.pos.x == 2 or obj.pos.x == 3) and (obj.pos.y == 4 or obj.pos.y == 5)):
!     pass
  
! if isinstance(obj, Class) and (obj.attr == 2 or obj.attr == 3) and isinstance(obj.pos, OtherClass) and ( (obj.pos.x == 2 or obj.pos.x == 3) and (obj.pos.y == 4 or obj.pos.y == 5)):
!     pass
  
  
! if isinstance(obj, Class) and (obj.attr == -5 or obj.attr == "asd") and something():
!     pass
  
! if isinstance(obj, SomeClass) and (obj.x == 3 or obj.x == 5):
!     pass
! elif isinstance(obj, SomeClass) and (obj.x == 10 or obj.x == 100):
!     pass
  
  
! if isinstance(obj, (Cl1, Cl2, Cl3)):
!     something()
! elif isinstance(obj, (Cl3, Cl4, Cl5)) and (obj.val == 2 or obj.val == 4):
!     something()
  
  
! if isinstance(obj, some_module.SomeClass): 
!     pass
! elif isinstance(obj, OtherClass):
!     pass
! elif isinstance(obj, tuple_of_classes):
!     pass
  
  
! if isinstance(x, OtherClass) and (x.attribute == 42 and x.other_attribute == "something"):
!     something(1)
!     pass
!     something(3)
! elif isinstance(x, OtherClass) and ( (x.attribute == 12 or x.attribute == 24) and (x.other_attribute == "this" or x.other_attribute == "that") and (any_bool_expression()) ):
!     something(1)
!     pass
!     something(3)
! elif isinstance(x, OtherClass):
!     something(1)
!     something(2)
!     something(3)
--- 16,67 ----
      something()
  
  
! match obj:
!     case Class(attr=2 | 3, pos=OtherClass(x=2 | 3, y=4 | 5)):
!         pass
  
! match obj:
!     case Class(attr=2 | 3, pos=OtherClass(x=2 | 3, y=4 | 5)):
!         pass
  
  
! match obj:
!     case Class(attr=-5 | 'asd') if something():
!         pass
  
! match obj:
!     case SomeClass(x=3 | 5):
!         pass
!     case SomeClass(x=10 | 100):
!         pass
  
  
! match obj:
!     case Cl1() | Cl2() | Cl3():
!         something()
!     case Cl3(val=2 | 4) | Cl4(val=2 | 4) | Cl5(val=2 | 4):
!         something()
  
  
! match obj:
!     case some_module.SomeClass():
!         pass
!     case OtherClass():
!         pass
!     case tuple_of_classes():
!         pass
  
  
! match x:
!     case OtherClass(attribute=42, other_attribute='something'):
!         something(1)
!         pass
!         something(3)
!     case OtherClass(attribute=12 | 24, other_attribute='this' | 'that') if any_bool_expression():
!         something(1)
!         pass
!         something(3)
!     case OtherClass():
!         something(1)
!         something(2)
!         something(3)
*** /home/tirasz/newLogic/transpy/tests/transformed-test_files/test_1.py
--- /home/tirasz/newLogic/transpy/tests/transformed-test_files/test_1.py
***************
*** 1,28 ****
! if obj.prop == 2 or obj.prop == 4 or (obj.prop == 5 or obj.prop == 6):
!     pass
! elif obj.prop == 3 or obj.prop == 5:
!     pass
  
! if something[0] == 2 or something[0] == 4:
!     pass
! elif (something[0] == 6 or something[0] == 69) and something():
!     pass
  
! if number == None:
!     pass
! elif number == 2 or number == 3 or number == 3:
!     pass
! elif (number == 4 or number == 5 or number == 6) and anything(1) and anything("Something"):
!     pass
! elif anything(2) and anything() and number == 7:
!     pass
! elif asd == 8 and (number == 9 or number == 10):
!     pass
  
! if (number == 1 or number == 2) and (asd == 3 or asd == 4) and anything(): 
!     pass
! elif number == 5 and asd == 6 and anything():                               
!     pass
  
  if something():
      print("asd")
--- 1,32 ----
! match obj.prop:
!     case 2 | 4 | 5 | 6:
!         pass
!     case 3 | 5:
!         pass
  
! match something[0]:
!     case 2 | 4:
!         pass
!     case 6 | 69 if something():
!         pass
  
! match number:
!     case None:
!         pass
!     case 2 | 3 | 3:
!         pass
!     case 4 | 5 | 6 if anything(1) and anything('Something'):
!         pass
!     case 7 if anything(2) and anything():
!         pass
!     case 9 | 10 if asd == 8:
!         pass
  
! match asd:
!     case 3 | 4 if (number == 1 or number == 2) and anything():
!         pass
!     case 6 if number == 5 and anything():
!         pass
  
  if something():
      print("asd")
***************
*** 32,41 ****
      print("asd")
  
  
! if something == True or something == False:
!     pass
! elif something is True or something is False:
!     pass
  
  if something is not None or something is True:
      pass
--- 36,46 ----
      print("asd")
  
  
! match something:
!     case True | False:
!         pass
!     case True | False:
!         pass
  
  if something is not None or something is True:
      pass
*** /home/tirasz/newLogic/transpy/tests/transformed-test_files/test_3.py
--- /home/tirasz/newLogic/transpy/tests/transformed-test_files/test_3.py
***************
*** 1,162 ****
! if isinstance(obj, SomeClass):
!     if obj.x == 3 or obj.x == 5:
          pass
!     elif obj.x == 10 or obj.x == 100:
          pass
  
! if isinstance(obj, Cat):
!     if obj.color == 'black' or obj.color == 'gray':
          turn_around()
!     elif obj.color == 'orange' and obj.weight == 'a lot':
          give_lasagne()
!     else:
          ignore_cat()
! elif isinstance(obj, Dog):
!     if obj.color == 'black' or obj.color == 'gray':
          give_pets()
!     elif obj.color == 'orange' and obj.weight == 'a lot':
          give_treats()
!     else:
          ignore_cat()
  
! if a == 2 or a == 6:
!     if isinstance(b, Cat) and (b.color == "black" or b.color == "gray"):
          turn_around()
!     elif isinstance(b, Cat) and b.color == 'orange' and b.weight == 'a lot':
          give_lasagne()
!     if isinstance(b, Dog) and (b.color == "black" or b.color == "gray"):
!         turn_around()
!     elif isinstance(b, Dog) and b.color == 'orange' and b.weight == 'a lot':
!         give_lasagne()
! 
! if isinstance(obj, Cat):
!     if obj.color == 'black' or obj.color == 'gray':
!         turn_around()
!     elif obj.color == 'orange' and obj.weight == 'a lot':
!         give_lasagne()
!     else:
          ignore_cat()
! elif isinstance(obj, Dog):
!     if obj.color == 'black' or obj.color == 'gray':
          give_pets()
!     elif obj.color == 'orange' and obj.weight == 'a lot':
          give_treats()
!     else:
          ignore_cat()
  
! if isinstance(obj2, Cat):
!     something(1)
!     if obj2.color == 'black' or obj2.color == 'gray':
          turn_around()
!     elif obj2.color == 'orange' and obj2.weight == 'a lot':
          give_lasagne()
!     else:
          ignore_cat()
! elif isinstance(obj2, Dog):
!     if obj2.color == 'black' or obj2.color == 'gray':
          give_pets()
!     elif obj2.color == 'orange' and obj2.weight == 'a lot':
          give_treats()
!     else:
          ignore_cat()
!     something(2)
  
  
! if isinstance(obj3, Cat):
!     if asd.color == 'black' or asd.color == 'gray':
!         turn_around()
!     elif asd.color == 'orange' and asd.weight == 'a lot':
!         give_lasagne()
!     else:
!         ignore_cat()
! elif isinstance(obj3, Dog):
!     if asd.color == 'black' or asd.color == 'gray':
!         give_pets()
!     elif asd.color == 'orange' and asd.weight == 'a lot':
!         give_treats()
!     else:
!         ignore_cat()
  
  
! if isinstance(obj4, Cat):
!     if obj4.color == 'black' or obj4.color == 'gray':
          turn_around()
!     elif obj4.color == 'orange' and obj4.weight == 'a lot':
          give_lasagne()
!     else:
          ignore_cat()
! else:
!     if obj4 == "Dog" or obj4 == "Cat":
          give_lasagne()
!     elif obj4 == 'Human':
          turn_around()
!     else:
          pass
  
  
! if isinstance(obj4, Cat):
!     one_line()
!     if obj4.color == 'black' or obj4.color == 'gray':
          turn_around()
!     elif obj4.color == 'orange' and obj4.weight == 'a lot':
          give_lasagne()
!     else:
          ignore_cat()
! else:
!     if obj4 == "Dog" or obj4 == "Cat":
          give_lasagne()
!     elif obj4 == 'Human':
          turn_around()
!     else:
          pass
  
! if isinstance(obj4, Cat):
!     two_lines()
!     if obj4.color == 'black' or obj4.color == 'gray':
          turn_around()
!     elif obj4.color == 'orange' and obj4.weight == 'a lot':
          give_lasagne()
!     else:
          ignore_cat()
!     two_lines()
! else:
!     if obj4 == "Dog" or obj4 == "Cat":
          give_lasagne()
!     elif obj4 == 'Human':
          turn_around()
!     else:
          pass
  
! if isinstance(obj4, Cat):
!     lot_of_lines()
!     lot_of_lines()
!     lot_of_lines()
!     if obj4.color == 'black' or obj4.color == 'gray':
          turn_around()
!     elif obj4.color == 'orange' and obj4.weight == 'a lot':
!         give_lasagne()
!     else:
!         ignore_cat()
!     lot_of_lines()
!     lot_of_lines()
!     lot_of_lines()
! else:
!     if obj4 == "Dog" or obj4 == "Cat":
!         give_lasagne()
!     elif obj4 == 'Human':
!         turn_around()
!     else:
          pass
  
! if isinstance(obj, (Cl1, Cl3)):
!     if obj.val == 4 or obj.val == 6:
          something()
  
  
  def foo():
!     if isinstance(obj, SomeClass) and something():
!         if something_else():
              return obj.copy()
!         return obj
!     elif isinstance(obj, OtherClass):
!         return 2--- 1,173 ----
! match obj:
!     case SomeClass(x=3 | 5):
          pass
!     case SomeClass(x=10 | 100):
          pass
  
! match obj:
!     case Cat(color='black' | 'gray'):
          turn_around()
!     case Cat(color='orange', weight='a lot'):
          give_lasagne()
!     case Cat():
          ignore_cat()
!     case Dog(color='black' | 'gray'):
          give_pets()
!     case Dog(color='orange', weight='a lot'):
          give_treats()
!     case Dog():
          ignore_cat()
  
! match a:
!     case 2 | 6:
!         match b:
!             case Cat(color='black' | 'gray'):
!                 turn_around()
!             case Cat(color='orange', weight='a lot'):
!                 give_lasagne()
!         match b:
!             case Dog(color='black' | 'gray'):
!                 turn_around()
!             case Dog(color='orange', weight='a lot'):
!                 give_lasagne()
! 
! match obj:
!     case Cat(color='black' | 'gray'):
          turn_around()
!     case Cat(color='orange', weight='a lot'):
          give_lasagne()
!     case Cat():
          ignore_cat()
!     case Dog(color='black' | 'gray'):
          give_pets()
!     case Dog(color='orange', weight='a lot'):
          give_treats()
!     case Dog():
          ignore_cat()
  
! match obj2:
!     case Cat(color='black' | 'gray'):
!         something(1)
          turn_around()
!     case Cat(color='orange', weight='a lot'):
!         something(1)
          give_lasagne()
!     case Cat():
!         something(1)
          ignore_cat()
!     case Dog(color='black' | 'gray'):
          give_pets()
!         something(2)
!     case Dog(color='orange', weight='a lot'):
          give_treats()
!         something(2)
!     case Dog():
          ignore_cat()
!         something(2)
  
  
! match obj3:
!     case Cat():
!         match asd.color:
!             case 'black' | 'gray':
!                 turn_around()
!             case 'orange' if asd.weight == 'a lot':
!                 give_lasagne()
!             case _:
!                 ignore_cat()
!     case Dog():
!         match asd.color:
!             case 'black' | 'gray':
!                 give_pets()
!             case 'orange' if asd.weight == 'a lot':
!                 give_treats()
!             case _:
!                 ignore_cat()
  
  
! match obj4:
!     case Cat(color='black' | 'gray'):
          turn_around()
!     case Cat(color='orange', weight='a lot'):
          give_lasagne()
!     case Cat():
          ignore_cat()
!     case 'Dog' | 'Cat':
          give_lasagne()
!     case 'Human':
          turn_around()
!     case _:
          pass
  
  
! match obj4:
!     case Cat(color='black' | 'gray'):
!         one_line()
          turn_around()
!     case Cat(color='orange', weight='a lot'):
!         one_line()
          give_lasagne()
!     case Cat():
!         one_line()
          ignore_cat()
!     case 'Dog' | 'Cat':
          give_lasagne()
!     case 'Human':
          turn_around()
!     case _:
          pass
  
! match obj4:
!     case Cat(color='black' | 'gray'):
!         two_lines()
          turn_around()
!         two_lines()
!     case Cat(color='orange', weight='a lot'):
!         two_lines()
          give_lasagne()
!         two_lines()
!     case Cat():
!         two_lines()
          ignore_cat()
!         two_lines()
!     case 'Dog' | 'Cat':
          give_lasagne()
!     case 'Human':
          turn_around()
!     case _:
          pass
  
! match obj4:
!     case Cat():
!         lot_of_lines()
!         lot_of_lines()
!         lot_of_lines()
!         match obj4.color:
!             case 'black' | 'gray':
!                 turn_around()
!             case 'orange' if obj4.weight == 'a lot':
!                 give_lasagne()
!             case _:
!                 ignore_cat()
!         lot_of_lines()
!         lot_of_lines()
!         lot_of_lines()
!     case 'Dog' | 'Cat':
!         give_lasagne()
!     case 'Human':
          turn_around()
!     case _:
          pass
  
! match obj:
!     case Cl1(val=4 | 6) | Cl3(val=4 | 6):
          something()
  
  
  def foo():
!     match obj:
!         case SomeClass() if something() and something_else():
              return obj.copy()
!             return obj
!         case OtherClass():
!             return 2
